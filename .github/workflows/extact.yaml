name: Extract name Reddisekhar 
on:
  workflow_dispatch:
    inputs:
      namespace:
        description: 'Enter namespace'
        required: true
        default: 'namespace1'
        type: choice
        options:
        - 'abc-def-efg-hij'
        - 'jkl-mno-pqr'
        - 'jkl-mno-pqr-test'
        - None
      environment:
        description: 'Enter environment'
        required: true
        default: 'None'
        type: choice
        options:
        - 'UAT1'
        - 'UAT2'
        - None
env:
  PARAMETER_WF: ${{ github.event.inputs.namespace }}      
  TARGER_ENV: ${{ github.event.inputs.environment }}      
jobs:
  extract_age:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Extract Age
      id: read-data
      run: |
        if jq -e ".[] | select(has(\"$PARAMETER_WF\"))" ./${TARGER_ENV}/property.json > /dev/null; then
          name=$(jq ".[] | select(has(\"$PARAMETER_WF\")) | .[\"$PARAMETER_WF\"].name" ./${TARGER_ENV}/property.json)
          age=$(jq ".[] | select(has(\"$PARAMETER_WF\")) | .[\"$PARAMETER_WF\"].age" ./${TARGER_ENV}/property.json)
          city=$(jq ".[] | select(has(\"$PARAMETER_WF\")) | .[\"$PARAMETER_WF\"].city" ./${TARGER_ENV}/property.json)
          echo "name=$name" >>"$GITHUB_OUTPUT"
          echo "age=$age" >>"$GITHUB_OUTPUT"
          echo "city=$city" >>"$GITHUB_OUTPUT"
          echo "Name of $PARAMETER_WF is $name"
          echo "age of $PARAMETER_WF is $age"
          echo "city of $PARAMETER_WF is $city"
        else
          echo "$PARAMETER_WF object not found in the JSON file."
        fi
    - name: display in another step
      run: |
        echo "name: ${{ steps.read-data.outputs.name}}"
        echo "age: ${{ steps.read-data.outputs.age}}"
        echo "city: ${{ steps.read-data.outputs.city}}"
